library(tidyverse)
library(lubridate)
library(nycflights13)
library(magrittr)
library(pryr)

typeof(1) # double
typeof(1L) # use L suffix to make integer
c(-1, 0, 1) / 0

x <- "This is a reasonably long string."
pryr::object_size(x)
# R makes pointer of 8 bytes to point to the same value if it comes multiple times
y <- rep(x, 1000)
pryr::object_size(y)

typeof(c(TRUE, 1L))
# Always the most complex type is taken by the vector
typeof(c(1L, 1.5))

1:10 + 1:3
tibble(x = 1:4, y = rep(1:2, 2))
tibble(x = 1:4, y = rep(1:2, each = 2))

x <- c("one", "two", "three", "four", "five")
x[c(3, 2, 5)]
x[c(1, 1, 5, 5, 5, 2)]
x <- c(abc = 1, def = 2, xyz = 5)
x[c("xyz", "def")]

a<- list(a = 1:3, b = "a string", c = pi, d = list(-1, -5))
str(a)
str(a[[1]])
str(a[1])

x <- factor(c("ab", "cd", "ab"), levels = c("ab", "cd", "ef"))
typeof(x)
attributes(x)
x

x <- as.Date("1971-01-01")
unclass(x)
typeof(x)
attributes(x)

x <- lubridate::ymd_hm("1970-01-01 01:00")
attr(x, "tzone") <- "US/Pacific"
x
attr(x, "tzone") <- "US/Eastern"
x

y <- vector("double", 0)
y
seq_along(y)
1:length(y)

df <- tibble(
  a = rnorm(10),
  b = rnorm(10),
  c = rnorm(10),
  d = rnorm(10)
)
rescale01 <- function(x) {
  rng <- range(x, na.rm = TRUE)
  (x - rng[1]) / (rng[2] - rng[1])
}
for (i in seq_along(df)) {
  df[[i]] <- rescale01(df[[i]])
}
df

means <- c(0, 1, 2)
output <- double()
for (i in seq_along(means)) {
  n <- sample(100, 1)
  output <- c(output, rnorm(n, means[[i]]))
}
str(output)
runif(10)

out <- vector("list", length(means))
for (i in seq_along(means)) {
  n <- sample(100, 1)
  out[[i]] <- rnorm(n, means[[i]])
}
str(out)
