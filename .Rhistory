data_grid(wday,term) %>% add_predictions(mod2,'n')
grid
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red')
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_wrap(.term)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_wrap(.~term)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_wrap(~term.)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_wrap(term.)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_wrap(term~.)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_wrap(term~.)+
coord_flip()
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_grid(term~.)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_grid(term.)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_grid(~.term)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_grid(~term)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_grid(.term)
ggplot(daily,aes(wday,n)) +
geom_boxplot() +
geom_point(data=grid,color='red') +
facet_wrap(term~.)
mod3=MASS::rlm(n~wday*term,data=daily)
daily
daily %>% add_residuals(mod3,'resid')
add_residuals(daily,mod3,'resid')
daily %>% add_residuals(mod3,'resid') %>%
ggplot(aes(date,resid)) +
geom_hline(yintercept=0,size=2,color='green')+
geom_line()
daily %>% add_residuals(mod3,'resid') %>%
ggplot(aes(date,resid)) +
geom_hline(yintercept=0,size=1,color='green')+
geom_line()
ns(daily$date,5)
?MASS:rlm()
?MASS::rlm()
?ns()
?ns
??ns
library(splines)
?ns()
women
ns(women$height, df = 5)
a=ns(women$height, df = 5)
a
mod <- MASS::rlm(n ~ wday * ns(date, 5), data = daily)
daily %>%
data_grid(wday, date = seq_range(date, n = 13)) %>%
add_predictions(mod)
daily %>%
data_grid(wday, date = seq_range(date, n = 13)) %>%
add_predictions(mod)%>%
ggplot(aes(date, pred, color = wday)) +
geom_line() +
geom_point()
library(tidyverse)
library(modelr)
options(na.action = na.warn)
library(nycflights13)
library(lubridate)
library(splines)
library(gapminder)
install.packages("gapminder")
library(gapminder)
gapminder
gapminder %>%
ggplot(aes(year, lifeExp, group = country)) +
geom_line(alpha = 1/3)
gapminder %>% group_by(country) %>%
summarize(mean=mean(lifeexp))
gapminder %>% group_by(country) %>%
summarize(mean=mean(lifeExp))
gapminder %>% group_by(country) %>%
summarize(mean=mean(lifeExp)) %>% print(n=Inf)
gapminder %>% group_by(country) %>%
summarize(mean=mean(lifeExp)) %>% arange(mean)%>%
print(n=Inf)
gapminder %>% group_by(country) %>%
summarize(mean=mean(lifeExp)) %>% arrange(mean)%>%
print(n=Inf)
gapminder %>% print(n=20)
gapminder %>%filter(year==2007) group_by(country) %>%
summarize(mean=mean(lifeExp)) %>% arrange(mean)%>%
print(n=Inf)
gapminder %>%filter(year==2007) %>%
group_by(country) %>%
summarize(mean=mean(lifeExp)) %>% arrange(mean)%>%
print(n=Inf)
nz <- filter(gapminder, country == "New Zealand")
nz
nz %>%
ggplot(aes(year, lifeExp)) +
geom_line() +
ggtitle("Full data = ")
nz_mod <- lm(lifeExp ~ year, data = nz)
nz %>%
add_predictions(nz_mod) %>%
ggplot(aes(year, pred)) +
geom_line() +
ggtitle("Linear trend + ")
nz %>%
add_residuals(nz_mod) %>%
ggplot(aes(year, resid)) +
geom_hline(yintercept = 0, color = "white", size = 3) +
geom_line() +
ggtitle("Remaining pattern")
# Nested data
by_country <- gapminder %>%
group_by(country, continent) %>%
nest()
by_country
bt_country$data[1]
by_country$data[1]
by_country$data[[1]]
gapminder %>%filter(year==2007) %>%
group_by(country) %>%
summarize(mean=mean(lifeExp),gdp=gdpPercap) %>% arrange(gdp)%>%
print(n=Inf)
gapminder %>%filter(year==2007) %>%
group_by(country) %>%
summarize(mean=mean(lifeExp)) %>% arrange(mean,rev)%>%
print(n=Inf)
gapminder %>%filter(year==2007) %>%
group_by(country) %>%
summarize(mean=mean(lifeExp),gdp=gdpPercap) %>% arrange(rev=gdp)%>%
print(n=Inf)
gapminder %>%filter(year==2007) %>%
group_by(country) %>%
summarize(mean=mean(lifeExp),gdp=gdpPercap) %>% arrange(rev(gdp))%>%
print(n=Inf)
?arrange
?dplyr::arrange
gapminder %>%filter(year==2007) %>%
group_by(country) %>%
summarize(mean=mean(lifeExp),gdp=gdpPercap) %>% arrange(desc(gdp))%>%
print(n=Inf)
source('~/R/R_Data_Analysis/Model_3.R')
by_country$data[[1]]
by_country$data[[1]]
by_country
models
by_country <- by_country %>%
mutate(model=map(data,country_model))
by_country
by_country %>% filter(continent=='Europe')
by_country %>% arrange(country)
by_country %>% arrange(country,continent)
by_country %>% arrange(country,continent)
by_country %>% arrange(continent,country)
# Unnesting
by_country <- by_country %>%
mutate(resid=map(data,model,add_residuals))
# Unnesting
by_country <- by_country %>%
mutate(resid=map2(data,model,add_residuals))
by_country
unnest(by_country,resid)
rsids <- unnest(by_country,resid)
resids
resids <- unnest(by_country,resid)
resids
# Unnesting
by_country <- by_country %>%
mutate(resid=map2(data,model,add_residuals))
resids <- unnest(by_country,resid)
resids
resids %<% print(width=Inf)
resids %>% print(width=Inf)
resids %>% ggplot(aes(year,lifeExp))+
geom_line(group=country)+
geom_smooth(se=F)
resids %>% print(width=Inf)
resids %>% ggplot(aes(year,lifeExp))+
geom_line(aes(group=country))+
geom_smooth(se=F)
resids %>% ggplot(aes(year,lifeExp))+
geom_line(aes(group=country))+
facet_wrap(~continent)
resids %>% ggplot(aes(year,resid))+
geom_line(aes(group=country))+
geom_smooth(se=FALSE)
resids %>% ggplot(aes(year,resid))+
geom_line(aes(group=country),alpha=1/5)+
geom_smooth(se=FALSE)
resids %>% ggplot(aes(year,resid))+
geom_line(aes(group=country),alpha=1/5)+
facet_wrap(~continent)
library(broom)
nz_mod
glance(nz_model)
glance(nz_mod)
by_country %>% mutate(glance=map(model,glance))
by_country %>% mutate(glance=map(model,glance)) %>%
unnest()
by_country %>% mutate(glance=map(model,glance)) %>%
unnest(glance)
glance <- by_country %>% mutate(glance=map(model,glance)) %>%
glance <- by_country %>% mutate(glance=map(model,glance)) %>%
unnest(glance,.derop=TRUE)
glance
glance <- by_country %>% mutate(glance=map(model,glance)) %>%
unnest(glance,.drop=TRUE)
glance
by_country %>% mutate(glance=map(model,glance)) %>%
unnest(glance)
by_country %>% mutate(glance=map(model,glance)) %>%
unnest(glance)
glance <- by_country %>% mutate(glance=map(model,broom::glance)) %>%
unnest(glance,.drop=TRUE)
library(broom)
by_country %>% mutate(glance=map(model,glance)) %>%
unnest(glance)
by_country %>% mutate(glance=map(model,broom::glance)) %>%
unnest(glance)
glance <- by_country %>% mutate(glance=map(model,broom::glance)) %>%
unnest(glance,.drop=TRUE)
glance
glance <- by_country %>%
mutate(glance = map(model, broom::glance)) %>%
unnest(glance, .drop = TRUE)
glance
by_country
by_country %>% mutate(glance=map(model,broom::glance)) %>%
unnest(glance)
glance <- by_country %>% mutate(glance=map(model,broom::glance)) %>%
unnest(glance,.drop=TRUE)
glance
glance %>% arrange(r.squared)
ggplot(glance,aes(continent,r.squared))+
geom_jitter(width = 0.5)
bad_fit <- glance %>% filter(r.squared<0.25)
bad_fit
gapminder %>% semijoin(bad_fit,by='country') %>%
ggplot(aes(year,lifeExp,color=country)) +
geom_line()
gapminder %>% semi_join(bad_fit,by='country') %>%
ggplot(aes(year,lifeExp,color=country)) +
geom_line()
data.frame(x = list(1:3, 3:5))
data.frame(
x = I(list(1:3, 3:5)),
y = c("1, 2", "3, 4, 5")
)
tibble(
x = list(1:3, 3:5),
y = c("1, 2", "3, 4, 5")
)
tribble(
~x, ~y,
1:3, "1, 2",
3:5, "3, 4, 5"
)
gapminder %>%
group_by(country, continent) %>%
nest()
gapminder %>% nest(year:gdpPercap)
df <- tribble(
~x1,
"a,b,c",
"d,e,f,g"
)
df
df %>% mutate(x2=stringr::str_split(x1,','))
df %>% mutate(x2=stringr::str_split(x1,',')) %>%
unnest()
sim <- tribble(
~f, ~params,
"runif", list(min = -1, max = -1),
"rnorm", list(sd = 5),
"rpois", list(lambda = 10)
)
sim %>%
mutate(sims=invoke_map(f,params,n=10))
mtcars %>%
group_by(cyl) %>%
summarize(q = quantile(mpg))
mtcars %>%
group_by(cyl) %>%
summarize(q = list(quantile(mpg)))
?quantile
mtcars %>%
group_by(cyl) %>%
summarize(p = list(probs), q = list(quantile(mpg, probs))) %>%
unnest()
probs <- c(0.01, 0.25, 0.5, 0.75, 0.99)
mtcars %>%
group_by(cyl) %>%
summarize(p = list(probs), q = list(quantile(mpg, probs))) %>%
unnest()
x <- list(
a = 1:5,
b = 3:4,
c = 5:6
)
x
df <- enframe(x)
df
df <- tribble(
~x,
letters[1:5],
1:3,
runif(5)
)
df
df %>% mutate(type=map_char(x,typeof),length=map_int(x,length))
df
df %>% mutate(type=map_char(x,typeof),length=map_int(x,length))
df %>% mutate(type=map_chr(x,typeof),length=map_int(x,length))
df <- tribble(
~x,
list(a = 1, b = 2),
list(a = 2, c = 4)
)
df
df %>% mutate(
a = map_dbl(x, "a"),
b = map_dbl(x, "b", .null = NA_real_)
)
df
tibble(x = 1:2, y = list(1:4, 1)) %>% unnest(y)
df1 <- tribble(
~x, ~y, ~z,
1, c("a", "b"), 1:2,
2, "c", 3
)
df1
df1 %>% unnest(y, z)
---
title: "Basics"
author: "me"
date: "10/27/2019"
output: html_document
---
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
knitr::kable(
mtcars[1:5, ],
caption = "A knitr kable."
)
---
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE
)
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE
)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
knitr::kable(
mtcars[1:5, ],
caption = "A knitr kable."
)
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE
)
knitr::opts_chunk$set(
echo = FALSE
)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
comma <- function(x) format(x, digits = 2,big.mark = ",")
comma(3452345)
comma(.12358124331)
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE
)
knitr::opts_chunk$set(
echo = FALSE
)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
comma <- function(x) format(x, digits = 2,big.mark = ",")
comma(3452345)
comma(.12358124331)
library(ggplot2)
library(dplyr)
class <- mpg %>% filter(class == params$my_class)
---
title: "Class"
author: "me"
date: "10/28/2019"
output: html_document
params:
my_class:'suv'
---
title: "Class"
author: "me"
date: "10/28/2019"
output: html_document
params:
my_class:'suv'
library(ggplot2)
library(dplyr)
class <- mpg %>% filter(class == params$my_class)
---
title: "Class"
author: "me"
date: "10/28/2019"
output: html_document
params:
my_class:'suv'
---
library(ggplot2)
library(ggplot2)
library(dplyr)
class <- mpg %>% filter(class == params$my_class)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
knit_with_parameters('~/R/R_Data_Analysis/Params_Markdown.Rmd')
knit_with_parameters('~/R/R_Data_Analysis/Params_Markdown.Rmd')
knit_with_parameters('~/R/R_Data_Analysis/Params_Markdown.Rmd')
knit_with_parameters('~/R/R_Data_Analysis/Params_Markdown.Rmd')
knit_with_parameters('~/R/R_Data_Analysis/Params_Markdown.Rmd')
library(ggplot2)
library(dplyr)
class <- mpg %>% filter(class == params$my_class)
ggplot(class, aes(displ, hwy)) +
geom_point() +
geom_smooth(se = FALSE)
rmarkdown::render(
"fuel-economy.Rmd",
params = list(my_class = "suv")
)
rmarkdown::render(
"Params_Markdown.Rmd",
params = list(my_class = "suv")
)
rmarkdown::render(
"Params_Markdown.Rmd",
params = list(my_class = "suv")
)
rmarkdown::render(
"Params_Markdown.Rmd",
params = list(my_class = "suv")
)
rmarkdown::render(
"Params_Markdown.Rmd",
params = list(my_class = "suv")
)
library(ggplot2)
library(dplyr)
class <- mpg %>% filter(class == params$my_class)
rmarkdown::render(
"Params_Markdown.Rmd",
params = list(my_class = "suv")
)
library(ggplot2)
library(dplyr)
class <- mpg %>% filter(class == params$my_class)
knit_with_parameters('~/R/R_Data_Analysis/Params_Markdown.Rmd')
