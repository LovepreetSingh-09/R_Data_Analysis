library(tidyverse)
ggplot2::ggplot()
mpg
summary(mpg)
str(mpg)
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy))
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,color=drv))
# same color for every point
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy)color=drv)
# same color for every point
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy),color=drv)
# same color for every point
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy),color='b')
# same color for every point
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy),color='blue')
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,size=drv))
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,shape=drv))
# Point color on the basis of drive train
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,color=class))
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,alpha=drv))
# For the color intensity
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,alpha=drv,color=drv))
# For the color intensity
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,alpha=drv,size=drv))
# For the color intensity
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,alpha=drv,,color=class))
# For the color intensity
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,alpha=drv))
ggplot(data = mpg) +
geom_point(
mapping = aes(x = displ, y = hwy, color = "blue")
)
ggplot(data = mpg) +
geom_point(
mapping = aes(x = displ, y = hwy, color = "red")
)
ggplot(data = mpg) +
geom_point(
mapping = aes(x = displ, y = hwy)
)
ggplot(data = mpg) +
geom_point(
mapping = aes(x = displ, y = hwy,color)
)
ggplot(data = mpg) +
geom_point(
mapping = aes(x = displ, y = hwy,color='')
)
# Default color after declaring only is red
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,color='yellow'))
# Default color after declaring is red
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy,color=c('yellow','blue'))
# Facets - facet_wrap()  and  facet_grid()
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy))+facet_wrap(~class,nrow=2)
# Facets - facet_wrap()  and  facet_grid()
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy))+facet_wrap(~class,nrow=2)
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy))+facet_grid(drv~cyl)
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy))+facet_grid(drv~.)
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy))+facet_grid(.~drv)
# Geometric Objects :
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy,color=class))
ggplot(data=mpg)+geom_smooth(mapping=aes(x=displ,y=hwy,color=class))
ggplot(data=mpg)+geom_smooth(mapping=aes(x=displ,y=hwy))
ggplot(data=mpg)+geom_smooth(mapping=aes(x=displ,y=hwy,linetype=drv))
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy,color=drv))+geom_smooth(aes(x=displ,y=hwy,linestylr=drv))
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy,color=drv))+geom_smooth(aes(x=displ,y=hwy,linestyle=drv))
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy,color=drv))+geom_smooth(aes(x=displ,y=hwy,linestyle=drv,color=drv))
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy,color=drv))+geom_smooth(aes(x=displ,y=hwy,linetype=drv,color=drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data=mpg,mapping=aes(x=displ,y=hwy))+
geom_point(mapping=aes(color=class))+
geom_smooth(data=filter(mpg,class='subcompact'),se=FALSE)
ggplot(data=mpg,mapping=aes(x=displ,y=hwy))+
geom_point(mapping=aes(color=class))+
geom_smooth(data=filter(mpg,class='subcompact'),se=FALSE)
ggplot(data=mpg,mapping=aes(x=displ,y=hwy))+
geom_point(mapping=aes(color=class))+
geom_smooth(data=filter(mpg,class=='subcompact'),se=FALSE)
ggplot(data=mpg,mapping=aes(x=displ,y=hwy))+
geom_point(mapping=aes(color=class))+
geom_smooth(data=filter(mpg,class=='subcompact'),se=TRUE)
ggplot(data=mpg)+geom_smooth(mapping=aes(x=displ,y=hwy,linetype=drv))
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy,color=drv))+
geom_smooth(aes(x=displ,y=hwy,linetype=drv,color=drv))
# Using glaobal assignment for mapping , then local assignment can overwrite and update the mapping
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
# se means the standard deviation or greyish region around the smooth line
ggplot(data=mpg,mapping=aes(x=displ,y=hwy))+
geom_point(mapping=aes(color=class))+
geom_smooth(data=filter(mpg,class=='subcompact'),se=TRUE)
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy,color=drv))+
geom_smooth(aes(x=displ,y=hwy,linetype=drv,group=drv))
ggplot(data=mpg)+geom_point(aes(x=displ,y=hwy,color=drv))+
geom_smooth(aes(x=displ,y=hwy,group=drv))
source('~/R/R_Data_Analysis/ggplot_Visualization.R')
# Bar Charts
diamonds
str(diamonds)
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut))
ggplot(data=diamonds)+stat_count(mapping=aes(x=cut))
# count is the default value for the stat
?geom_bar
ggplot(data=diamonds)+geom_col(mapping=aes(x=cut,y=clarity))
ggplot(data=diamonds)+geom_col(mapping=aes(x=cut))
ggplot(data=diamonds)+geom_col(mapping=aes(x=cut,y=y))
ggplot(data=diamonds)+geom_col(mapping=aes(x=cut,y=price))
demo <- tribble( ~a, ~b,
"bar_1", 20,
"bar_2", 30,
"bar_3", 40)
demo
ggplot(data=demo)+geom_col(mapping=aes(x=a,y=b,color='identity'))
# Bar Charts
diamonds
ggplot(data=demo)+geom_col(mapping=aes(x=a,y=b),stat='identity')
ggplot(data=demo)+geom_col(mapping=aes(x=a,y=b),stat='identity')
# for presenting the raw values of x with y use stat='identity'
ggplot(data=demo)+geom_bar(mapping=aes(x=a,y=b),stat='identity')
# for presenting the raw values of x with y use stat='identity'
ggplot(data=demo)+geom_bar(mapping=aes(x=a,y=b))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,y=..prop..,gropu=1))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,y=..prop..,grop=1))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,y=..prop..,group=1))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,y=..prop..,group=0))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,y=..prop..))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,y=..prop..,group=5))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,y=..prop..,group=10))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,y=..prop..,group=0.5))
? group
? geom_bar
ggplot(data=diamonds)+stat_sumary(mapping=aes(x=cut,y=depth),fun.min=min,fun.max=max,fun.y=median)
ggplot(data=diamonds)+stat_summary(mapping=aes(x=cut,y=depth),fun.min=min,fun.max=max,fun.y=median)
ggplot(data=diamonds)+stat_summary(mapping=aes(x=cut,y=depth),fun.ymin=min,fun.ymax=max,fun.y=median)
?stat_summary
ggplot(data=diamonds)+geom_freqpoly(mapping=aes(x=cut))
ggplot(data=diamonds)+geom_histogram(mapping=aes(x=cut))
ggplot(data=diamonds)+geom_freqpoly(mapping=aes(x=cut,y=depth))
ggplot(data=diamonds)+geom_histogram(mapping=aes(x=cut,y=depth))
?stat_smooth
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = color, y = ..prop..)
)
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,color=cut))
# fill is used to color the bar
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=cut))
summary(diamonds)
# for a stacked bar chart
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity),aplha=1/5,position='identity')
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity,aplha=1/5,position='identity'))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity,alpha=1/5,position='identity'))
# count is the default value for the geom_bar where as geo_col uses stat_identity as the default
# Geom_col represent the values instead of count
?geom_bar
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity,alpha=1/5,position = "identity"))
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity,alpha=1/5),position = "identity")
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity,),position = "identity")
# position = "identity" will place each object exactly where it falls in the context of the graph.
# This is not very useful for bars, because it overlaps them.
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity,alpha=1/5),position = "identity")
ggplot(
data = diamonds,
mapping = aes(x = cut, color = clarity)
) +
geom_bar(fill = NA, position = "identity")
# position = "fill" works like stacking, but makes each set of stacked bars the same height.
# This makes it easier to compare proportions across groups:
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity),position='fill')
# position = "dodge" places overlapping objects directly beside one another.
# This makes it easier to compare individual values:
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity),position='dodge')
# position = "jitter" adds a small amount of random noise to each point.
# This is useful where two data points overlaps because those 2 points are not likely to get same random noise.
ggplot(data=diamonds)+geom_bar(mapping=aes(x=cut,fill=clarity),position='jitter')
# position = "jitter" adds a small amount of random noise to each point.
# This is useful where two data points overlaps because those 2 points are not likely to get same random noise.
ggplot(data=mpg)+geom_bar(mapping=aes(x=dipl,y=hwy),position='jitter')
# position = "jitter" adds a small amount of random noise to each point.
# This is useful where two data points overlaps because those 2 points are not likely to get same random noise.
ggplot(data=mpg)+geom_bar(mapping=aes(x=displ,y=hwy),position='jitter')
# position = "jitter" adds a small amount of random noise to each point.
# This is useful where two data points overlaps because those 2 points are not likely to get same random noise.
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy),position='jitter')
ggplot(data=mpg)+geom_jitter(mapping=aes(x=displ,y=hwy))
?geom_jitter
# Co-ordinate Systems
ggplot(data = mpg, mapping = aes(x = class, y = hwy))+
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy))+
geom_boxplot()+coord_flip()
?geom_boxplot
nz=map_data('ind')
install.packages("maps")
library(maps)
nz=map_data('ind')
nz=map_data('india')
nz=map_data('nz')
nz=map_data('in')
?maps
?map.cities
nz=map_data('aus')
nz=map_data('us')
nz=get_map('india')
nz=get_map('India')
nz=map_data('Ind')
nz=map_data('Ind')
nz=map_data('nz')
str(nz)
ggplot(data=nz)+geom_polygon(aes(x=long,y=lat,fill='white',color='balck'))
ggplot(data=nz)+geom_polygon(aes(x=long,y=lat,color='balck'))
ggplot(data=nz)+geom_polygon(aes(x=long,y=lat,fill='white',color='balck',group=group))
ggplot(data=nz)+geom_polygon(aes(x=long,y=lat,color='balck',group=group),fill='white')
ggplot(data=nz)+geom_polygon(aes(x=long,y=lat,color='black',group=group),fill='white')
ggplot(data=nz)+geom_polygon(aes(x=long,y=lat,group=group),fill='white',color='black')
ggplot(data=nz)+geom_polygon(aes(x=long,y=lat,group=group),fill='white',color='black')+
geom_quickmap()
ggplot(data=nz)+geom_polygon(aes(x=long,y=lat,group=group),fill='white',color='black')+
coord_quickmap()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),theme(aspect.ratio=1),labs(NULL,NULL))+
coord_fixed()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut))+theme(aspect.ratio=1)+labs(NULL,NULL)+
coord_fixed()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut))+theme(aspect.ratio=1)+labs(x=NULL,y=NULL)+
coord_fixed()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),show.legend = FALSE,width=5)+theme(aspect.ratio=1)+labs(x=NULL,y=NULL)+
coord_fixed()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),show.legend = FALSE,width=0.5)+theme(aspect.ratio=1)+labs(x=NULL,y=NULL)+
coord_fixed()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),show.legend = FALSE,width=1)+theme(aspect.ratio=1)+labs(x=NULL,y=NULL)+
coord_fixed()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),show.legend = FALSE,width=1)+theme(aspect.ratio=1)+labs(x=NULL,y=NULL)+
coord_flip()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),show.legend = FALSE,width=1)+theme(aspect.ratio=5)+labs(x=NULL,y=NULL)+
coord_flip()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),show.legend = FALSE,width=1)+theme(aspect.ratio=1)+labs(x=NULL,y=NULL)+
coord_flip()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),show.legend = FALSE,width=1)+
theme(aspect.ratio=1)+labs(x=NULL,y=NULL)+
coordpolar()
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut),show.legend = FALSE,width=1)+
theme(aspect.ratio=1)+labs(x=NULL,y=NULL)+
coord_polar()
